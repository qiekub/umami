{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useMemo } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport firstBy from 'thenby';\nimport classNames from 'classnames';\nimport Link from 'components/common/Link';\nimport Loading from 'components/common/Loading';\nimport useFetch from 'hooks/useFetch';\nimport Arrow from 'assets/arrow-right.svg';\nimport { percentFilter } from 'lib/filters';\nimport useDateRange from 'hooks/useDateRange';\nimport usePageQuery from 'hooks/usePageQuery';\nimport useShareToken from 'hooks/useShareToken';\nimport ErrorMessage from 'components/common/ErrorMessage';\nimport DataTable from './DataTable';\nimport { DEFAULT_ANIMATION_DURATION, TOKEN_HEADER } from 'lib/constants';\nimport styles from './MetricsTable.module.css';\nexport default function MetricsTable(_ref) {\n  let {\n    websiteId,\n    type,\n    className,\n    dataFilter,\n    filterOptions,\n    limit,\n    onDataLoad\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"websiteId\", \"type\", \"className\", \"dataFilter\", \"filterOptions\", \"limit\", \"onDataLoad\"]);\n\n  const shareToken = useShareToken();\n  const [dateRange] = useDateRange(websiteId);\n  const {\n    startDate,\n    endDate,\n    modified\n  } = dateRange;\n  const {\n    resolve,\n    router,\n    query: {\n      url\n    }\n  } = usePageQuery();\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/api/website/${websiteId}/metrics`, {\n    params: {\n      type,\n      start_at: +startDate,\n      end_at: +endDate,\n      url\n    },\n    onDataLoad,\n    delay: DEFAULT_ANIMATION_DURATION,\n    headers: {\n      [TOKEN_HEADER]: shareToken === null || shareToken === void 0 ? void 0 : shareToken.token\n    }\n  }, [modified]);\n  const filteredData = useMemo(() => {\n    if (data) {\n      const items = percentFilter(dataFilter ? dataFilter(data, filterOptions) : data);\n\n      if (limit) {\n        return items.filter((e, i) => i < limit).sort(firstBy('y', -1).thenBy('x'));\n      }\n\n      return items.sort(firstBy('y', -1).thenBy('x'));\n    }\n\n    return [];\n  }, [data, error, dataFilter, filterOptions]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classNames(styles.container, className),\n    children: [!data && loading && /*#__PURE__*/_jsx(Loading, {}), error && /*#__PURE__*/_jsx(ErrorMessage, {}), data && !error && /*#__PURE__*/_jsx(DataTable, _objectSpread(_objectSpread({}, props), {}, {\n      data: filteredData,\n      className: className\n    })), /*#__PURE__*/_jsx(\"div\", {\n      className: styles.footer,\n      children: data && !error && limit && /*#__PURE__*/_jsx(Link, {\n        icon: /*#__PURE__*/_jsx(Arrow, {}),\n        href: router.pathname,\n        as: resolve({\n          view: type\n        }),\n        size: \"small\",\n        iconRight: true,\n        children: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"label.more\",\n          defaultMessage: \"More\"\n        })\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}