{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useMemo, useState, useCallback } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport firstBy from 'thenby';\nimport { percentFilter } from 'lib/filters';\nimport DataTable from './DataTable';\nimport FilterButtons from 'components/common/FilterButtons';\nvar FILTER_REFERRERS = 0;\nvar FILTER_PAGES = 1;\nexport default function RealtimeViews(_ref) {\n  var websiteId = _ref.websiteId,\n      data = _ref.data,\n      websites = _ref.websites;\n  var pageviews = data.pageviews;\n\n  var _useState = useState(FILTER_REFERRERS),\n      filter = _useState[0],\n      setFilter = _useState[1];\n\n  var domains = useMemo(function () {\n    return websites.map(function (_ref2) {\n      var domain = _ref2.domain;\n      return domain;\n    });\n  }, [websites]);\n  var getDomain = useCallback(function (id) {\n    var _websites$, _websites$find;\n\n    return websites.length === 1 ? (_websites$ = websites[0]) === null || _websites$ === void 0 ? void 0 : _websites$.domain : (_websites$find = websites.find(function (_ref3) {\n      var website_id = _ref3.website_id;\n      return website_id === id;\n    })) === null || _websites$find === void 0 ? void 0 : _websites$find.domain;\n  }, [websites]);\n  var buttons = [{\n    label: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"metrics.referrers\",\n      defaultMessage: \"Referrers\"\n    }),\n    value: FILTER_REFERRERS\n  }, {\n    label: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"metrics.pages\",\n      defaultMessage: \"Pages\"\n    }),\n    value: FILTER_PAGES\n  }];\n\n  var renderLink = function renderLink(_ref4) {\n    var x = _ref4.x;\n    var domain = x.startsWith('/') ? getDomain(websiteId) : '';\n    return /*#__PURE__*/_jsx(\"a\", {\n      href: \"//\".concat(domain).concat(x),\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      children: x\n    });\n  };\n\n  var _useMemo = useMemo(function () {\n    if (pageviews) {\n      var _referrers = percentFilter(pageviews.reduce(function (arr, _ref5) {\n        var referrer = _ref5.referrer;\n\n        if (referrer !== null && referrer !== void 0 && referrer.startsWith('http')) {\n          var hostname = new URL(referrer).hostname.replace(/^www\\./, '');\n\n          if (hostname && !domains.includes(hostname)) {\n            var row = arr.find(function (_ref6) {\n              var x = _ref6.x;\n              return x === hostname;\n            });\n\n            if (!row) {\n              arr.push({\n                x: hostname,\n                y: 1\n              });\n            } else {\n              row.y += 1;\n            }\n          }\n        }\n\n        return arr;\n      }, []).sort(firstBy('y', -1)));\n\n      var _pages = percentFilter(pageviews.reduce(function (arr, _ref7) {\n        var _url;\n\n        var url = _ref7.url,\n            website_id = _ref7.website_id;\n\n        if ((_url = url) !== null && _url !== void 0 && _url.startsWith('/')) {\n          if (!websiteId && websites.length > 1) {\n            url = \"\".concat(getDomain(website_id)).concat(url);\n          }\n\n          var row = arr.find(function (_ref8) {\n            var x = _ref8.x;\n            return x === url;\n          });\n\n          if (!row) {\n            arr.push({\n              x: url,\n              y: 1\n            });\n          } else {\n            row.y += 1;\n          }\n        }\n\n        return arr;\n      }, []).sort(firstBy('y', -1)));\n\n      return [_referrers, _pages];\n    }\n\n    return [];\n  }, [pageviews]),\n      referrers = _useMemo[0],\n      pages = _useMemo[1];\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(FilterButtons, {\n      buttons: buttons,\n      selected: filter,\n      onClick: setFilter\n    }), filter === FILTER_REFERRERS && /*#__PURE__*/_jsx(DataTable, {\n      title: /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"metrics.referrers\",\n        defaultMessage: \"Referrers\"\n      }),\n      metric: /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"metrics.views\",\n        defaultMessage: \"Views\"\n      }),\n      data: referrers,\n      height: 400\n    }), filter === FILTER_PAGES && /*#__PURE__*/_jsx(DataTable, {\n      title: /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"metrics.pages\",\n        defaultMessage: \"Pages\"\n      }),\n      metric: /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"metrics.views\",\n        defaultMessage: \"Views\"\n      }),\n      renderLabel: renderLink,\n      data: pages,\n      height: 400\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}