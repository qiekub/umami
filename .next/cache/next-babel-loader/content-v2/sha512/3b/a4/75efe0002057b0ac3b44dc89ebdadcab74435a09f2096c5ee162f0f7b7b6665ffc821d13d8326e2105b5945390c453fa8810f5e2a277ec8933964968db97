{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { getItem } from 'lib/web';\nimport { DEFAULT_LOCALE, DEFAULT_THEME, LOCALE_CONFIG, THEME_CONFIG, VERSION_CHECK } from 'lib/constants';\nimport semver from 'semver';\nconst app = createSlice({\n  name: 'app',\n  initialState: {\n    locale: getItem(LOCALE_CONFIG) || DEFAULT_LOCALE,\n    theme: getItem(THEME_CONFIG) || DEFAULT_THEME,\n    versions: {\n      current: process.env.VERSION,\n      latest: null,\n      hasUpdate: false\n    },\n    shareToken: null\n  },\n  reducers: {\n    setLocale(state, action) {\n      state.locale = action.payload;\n      return state;\n    },\n\n    setTheme(state, action) {\n      state.theme = action.payload;\n      return state;\n    },\n\n    setVersions(state, action) {\n      state.versions = action.payload;\n      return state;\n    },\n\n    setShareToken(state, action) {\n      state.shareToken = action.payload;\n      return state;\n    }\n\n  }\n});\nexport const {\n  setLocale,\n  setTheme,\n  setVersions,\n  setShareToken\n} = app.actions;\nexport default app.reducer;\nexport function checkVersion() {\n  return async (dispatch, getState) => {\n    const {\n      app: {\n        versions: {\n          current\n        }\n      }\n    } = getState();\n    const data = await fetch('https://api.github.com/repos/mikecao/umami/releases/latest', {\n      method: 'get',\n      headers: {\n        Accept: 'application/vnd.github.v3+json'\n      }\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return null;\n    });\n\n    if (!data) {\n      return;\n    }\n\n    const {\n      tag_name\n    } = data;\n    const latest = tag_name.startsWith('v') ? tag_name.slice(1) : tag_name;\n    const lastCheck = getItem(VERSION_CHECK);\n    const hasUpdate = latest && semver.gt(latest, current) && (lastCheck === null || lastCheck === void 0 ? void 0 : lastCheck.version) !== latest;\n    return dispatch(setVersions({\n      current,\n      latest,\n      hasUpdate\n    }));\n  };\n}","map":null,"metadata":{},"sourceType":"module"}