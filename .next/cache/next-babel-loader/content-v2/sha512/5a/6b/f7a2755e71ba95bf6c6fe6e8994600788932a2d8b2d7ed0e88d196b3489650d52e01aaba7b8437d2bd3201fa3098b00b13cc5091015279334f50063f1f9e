{"ast":null,"code":"import _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { BROWSERS } from './constants';\nimport { removeTrailingSlash, removeWWW, getDomainName } from './url';\nexport var urlFilter = function urlFilter(data, _ref) {\n  var raw = _ref.raw;\n\n  var isValidUrl = function isValidUrl(url) {\n    return url !== '' && !url.startsWith('#');\n  };\n\n  if (raw) {\n    return data.filter(function (_ref2) {\n      var x = _ref2.x;\n      return isValidUrl(x);\n    });\n  }\n\n  var cleanUrl = function cleanUrl(url) {\n    try {\n      var _URL = new URL(url, location.origin),\n          pathname = _URL.pathname,\n          search = _URL.search;\n\n      if (search.startsWith('?/')) {\n        return \"\".concat(pathname).concat(search);\n      }\n\n      return pathname;\n    } catch (_unused) {\n      return null;\n    }\n  };\n\n  var map = data.reduce(function (obj, _ref3) {\n    var x = _ref3.x,\n        y = _ref3.y;\n\n    if (!isValidUrl(x)) {\n      return obj;\n    }\n\n    var url = cleanUrl(x);\n\n    if (url) {\n      if (!obj[url]) {\n        obj[url] = y;\n      } else {\n        obj[url] += y;\n      }\n    }\n\n    return obj;\n  }, {});\n  return Object.keys(map).map(function (key) {\n    return {\n      x: key,\n      y: map[key]\n    };\n  });\n};\nexport var refFilter = function refFilter(data, _ref4) {\n  var domain = _ref4.domain,\n      domainOnly = _ref4.domainOnly,\n      raw = _ref4.raw;\n  var domainName = getDomainName(domain);\n  var regex = new RegExp(\"http[s]?://\".concat(domainName));\n  var links = {};\n\n  var isValidRef = function isValidRef(ref) {\n    return ref !== '' && !ref.startsWith('/') && !ref.startsWith('#');\n  };\n\n  if (raw) {\n    return data.filter(function (_ref5) {\n      var x = _ref5.x;\n      return isValidRef(x) && !regex.test(x);\n    });\n  }\n\n  var cleanUrl = function cleanUrl(url) {\n    try {\n      var _URL2 = new URL(url),\n          hostname = _URL2.hostname,\n          origin = _URL2.origin,\n          pathname = _URL2.pathname,\n          searchParams = _URL2.searchParams,\n          protocol = _URL2.protocol;\n\n      if (hostname === domainName) {\n        return null;\n      }\n\n      if (domainOnly && hostname) {\n        return removeWWW(hostname);\n      }\n\n      if (!origin || origin === 'null') {\n        return \"\".concat(protocol).concat(removeTrailingSlash(pathname));\n      }\n\n      if (protocol.startsWith('http')) {\n        var path = removeTrailingSlash(pathname);\n        var ref = searchParams.get('ref');\n        var query = ref ? \"?ref=\".concat(ref) : '';\n        return removeTrailingSlash(\"\".concat(removeWWW(hostname)).concat(path)) + query;\n      }\n\n      return null;\n    } catch (_unused2) {\n      return null;\n    }\n  };\n\n  var map = data.reduce(function (obj, _ref6) {\n    var x = _ref6.x,\n        y = _ref6.y;\n\n    if (!isValidRef(x)) {\n      return obj;\n    }\n\n    var url = cleanUrl(x);\n\n    if (!domainOnly && !raw) {\n      links[url] = x;\n    }\n\n    if (url) {\n      if (!obj[url]) {\n        obj[url] = y;\n      } else {\n        obj[url] += y;\n      }\n    }\n\n    return obj;\n  }, {});\n  return Object.keys(map).map(function (key) {\n    return {\n      x: key,\n      y: map[key],\n      w: links[key]\n    };\n  });\n};\nexport var browserFilter = function browserFilter(data) {\n  return data.map(function (_ref7) {\n    var _BROWSERS$x;\n\n    var x = _ref7.x,\n        y = _ref7.y;\n    return {\n      x: (_BROWSERS$x = BROWSERS[x]) !== null && _BROWSERS$x !== void 0 ? _BROWSERS$x : x,\n      y: y\n    };\n  });\n};\nexport var eventTypeFilter = function eventTypeFilter(data, types) {\n  if (!types || types.length === 0) {\n    return data;\n  }\n\n  return data.filter(function (_ref8) {\n    var x = _ref8.x;\n\n    var _x$split = x.split('\\t'),\n        _x$split2 = _slicedToArray(_x$split, 1),\n        event = _x$split2[0];\n\n    return types.some(function (type) {\n      return type === event;\n    });\n  });\n};\nexport var percentFilter = function percentFilter(data) {\n  var total = data.reduce(function (n, _ref9) {\n    var y = _ref9.y;\n    return n + y;\n  }, 0);\n  return data.map(function (_ref10) {\n    var x = _ref10.x,\n        y = _ref10.y,\n        props = _objectWithoutProperties(_ref10, [\"x\", \"y\"]);\n\n    return _objectSpread({\n      x: x,\n      y: y,\n      z: total ? y / total * 100 : 0\n    }, props);\n  });\n};","map":null,"metadata":{},"sourceType":"module"}