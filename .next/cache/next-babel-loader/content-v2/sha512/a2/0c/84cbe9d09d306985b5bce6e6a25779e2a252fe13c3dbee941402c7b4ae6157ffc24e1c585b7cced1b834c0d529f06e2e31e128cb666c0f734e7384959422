{"ast":null,"code":"import _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useIntl } from 'react-intl';\nimport tinycolor from 'tinycolor2';\nimport CheckVisible from 'components/helpers/CheckVisible';\nimport BarChart from './BarChart';\nimport useTheme from 'hooks/useTheme';\nimport { THEME_COLORS, DEFAULT_ANIMATION_DURATION } from 'lib/constants';\nexport default function PageviewsChart(_ref) {\n  var websiteId = _ref.websiteId,\n      data = _ref.data,\n      unit = _ref.unit,\n      records = _ref.records,\n      className = _ref.className,\n      loading = _ref.loading,\n      _ref$animationDuratio = _ref.animationDuration,\n      animationDuration = _ref$animationDuratio === void 0 ? DEFAULT_ANIMATION_DURATION : _ref$animationDuratio,\n      props = _objectWithoutProperties(_ref, [\"websiteId\", \"data\", \"unit\", \"records\", \"className\", \"loading\", \"animationDuration\"]);\n\n  var intl = useIntl();\n\n  var _useTheme = useTheme(),\n      _useTheme2 = _slicedToArray(_useTheme, 1),\n      theme = _useTheme2[0];\n\n  var primaryColor = tinycolor(THEME_COLORS[theme].primary);\n  var colors = {\n    views: {\n      background: primaryColor.setAlpha(0.4).toRgbString(),\n      border: primaryColor.setAlpha(0.5).toRgbString()\n    },\n    visitors: {\n      background: primaryColor.setAlpha(0.6).toRgbString(),\n      border: primaryColor.setAlpha(0.7).toRgbString()\n    }\n  };\n\n  var handleUpdate = function handleUpdate(chart) {\n    var datasets = chart.data.datasets;\n    datasets[0].data = data.sessions;\n    datasets[0].label = intl.formatMessage({\n      id: 'metrics.unique-visitors',\n      defaultMessage: 'Unique visitors'\n    });\n    datasets[1].data = data.pageviews;\n    datasets[1].label = intl.formatMessage({\n      id: 'metrics.page-views',\n      defaultMessage: 'Page views'\n    });\n  };\n\n  if (!data) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(CheckVisible, {\n    children: function children(visible) {\n      return /*#__PURE__*/_jsx(BarChart, _objectSpread(_objectSpread({}, props), {}, {\n        className: className,\n        chartId: websiteId,\n        datasets: [{\n          label: intl.formatMessage({\n            id: 'metrics.unique-visitors',\n            defaultMessage: 'Unique visitors'\n          }),\n          data: data.sessions,\n          lineTension: 0,\n          backgroundColor: colors.visitors.background,\n          borderColor: colors.visitors.border,\n          borderWidth: 1\n        }, {\n          label: intl.formatMessage({\n            id: 'metrics.page-views',\n            defaultMessage: 'Page views'\n          }),\n          data: data.pageviews,\n          lineTension: 0,\n          backgroundColor: colors.views.background,\n          borderColor: colors.views.border,\n          borderWidth: 1\n        }],\n        unit: unit,\n        records: records,\n        animationDuration: visible ? animationDuration : 0,\n        onUpdate: handleUpdate,\n        loading: loading\n      }));\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"module"}