{"ast":null,"code":"import { PrismaClient } from '@prisma/client';\nimport chalk from 'chalk';\nconst options = {\n  log: [{\n    emit: 'event',\n    level: 'query'\n  }]\n};\n\nfunction logQuery(e) {\n  if (process.env.LOG_QUERY) {\n    console.log(chalk.yellow(e.params), '->', e.query, chalk.greenBright(`${e.duration}ms`));\n  }\n}\n\nlet prisma;\n\nif (true) {\n  prisma = new PrismaClient(options);\n  prisma.$on('query', logQuery);\n} else {\n  if (!global.prisma) {\n    global.prisma = new PrismaClient(options);\n    global.prisma.$on('query', logQuery);\n  }\n\n  prisma = global.prisma;\n}\n\nexport default prisma;","map":null,"metadata":{},"sourceType":"module"}