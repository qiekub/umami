{"ast":null,"code":"import cors from 'cors';\nimport { getSession } from './session';\nimport { getAuthToken } from './auth';\nimport { unauthorized, badRequest, serverError } from './response';\nexport function use(middleware) {\n  return (req, res) => new Promise((resolve, reject) => {\n    middleware(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}\nexport const useCors = use(cors());\nexport const useSession = use(async (req, res, next) => {\n  let session;\n\n  try {\n    session = await getSession(req);\n  } catch (e) {\n    console.error(e);\n    return serverError(res, e.message);\n  }\n\n  if (!session) {\n    return badRequest(res);\n  }\n\n  req.session = session;\n  next();\n});\nexport const useAuth = use(async (req, res, next) => {\n  const token = await getAuthToken(req);\n\n  if (!token) {\n    return unauthorized(res);\n  }\n\n  req.auth = token;\n  next();\n});","map":null,"metadata":{},"sourceType":"module"}