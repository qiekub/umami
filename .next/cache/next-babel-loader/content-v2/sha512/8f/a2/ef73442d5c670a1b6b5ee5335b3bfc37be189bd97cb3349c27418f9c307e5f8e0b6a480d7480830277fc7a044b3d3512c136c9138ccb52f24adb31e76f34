{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Loading from 'components/common/Loading';\nimport ErrorMessage from 'components/common/ErrorMessage';\nimport useFetch from 'hooks/useFetch';\nimport useDateRange from 'hooks/useDateRange';\nimport usePageQuery from 'hooks/usePageQuery';\nimport useShareToken from 'hooks/useShareToken';\nimport { formatShortTime, formatNumber, formatLongNumber } from 'lib/format';\nimport { TOKEN_HEADER } from 'lib/constants';\nimport MetricCard from './MetricCard';\nimport styles from './MetricsBar.module.css';\nexport default function MetricsBar(_ref) {\n  var websiteId = _ref.websiteId,\n      className = _ref.className;\n  var shareToken = useShareToken();\n\n  var _useDateRange = useDateRange(websiteId),\n      _useDateRange2 = _slicedToArray(_useDateRange, 1),\n      dateRange = _useDateRange2[0];\n\n  var startDate = dateRange.startDate,\n      endDate = dateRange.endDate,\n      modified = dateRange.modified;\n\n  var _useState = useState(true),\n      format = _useState[0],\n      setFormat = _useState[1];\n\n  var _usePageQuery = usePageQuery(),\n      url = _usePageQuery.query.url;\n\n  var _useFetch = useFetch(\"/api/website/\".concat(websiteId, \"/stats\"), {\n    params: {\n      start_at: +startDate,\n      end_at: +endDate,\n      url: url\n    },\n    headers: _defineProperty({}, TOKEN_HEADER, shareToken === null || shareToken === void 0 ? void 0 : shareToken.token)\n  }, [url, modified]),\n      data = _useFetch.data,\n      error = _useFetch.error,\n      loading = _useFetch.loading;\n\n  var formatFunc = format ? formatLongNumber : formatNumber;\n\n  function handleSetFormat() {\n    setFormat(function (state) {\n      return !state;\n    });\n  }\n\n  var _ref2 = data || {},\n      pageviews = _ref2.pageviews,\n      uniques = _ref2.uniques,\n      bounces = _ref2.bounces,\n      totaltime = _ref2.totaltime;\n\n  var num = Math.min(uniques, bounces);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classNames(styles.bar, className),\n    onClick: handleSetFormat,\n    children: [!data && loading && /*#__PURE__*/_jsx(Loading, {}), error && /*#__PURE__*/_jsx(ErrorMessage, {}), data && !error && /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(MetricCard, {\n        label: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"metrics.views\",\n          defaultMessage: \"Views\"\n        }),\n        value: pageviews,\n        format: formatFunc\n      }), /*#__PURE__*/_jsx(MetricCard, {\n        label: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"metrics.visitors\",\n          defaultMessage: \"Visitors\"\n        }),\n        value: uniques,\n        format: formatFunc\n      }), /*#__PURE__*/_jsx(MetricCard, {\n        label: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"metrics.bounce-rate\",\n          defaultMessage: \"Bounce rate\"\n        }),\n        value: uniques ? num / uniques * 100 : 0,\n        format: function format(n) {\n          return Number(n).toFixed(0) + '%';\n        }\n      }), /*#__PURE__*/_jsx(MetricCard, {\n        label: /*#__PURE__*/_jsx(FormattedMessage, {\n          id: \"metrics.average-visit-time\",\n          defaultMessage: \"Average visit time\"\n        }),\n        value: totaltime && pageviews ? totaltime / (pageviews - bounces) : 0,\n        format: function format(n) {\n          return formatShortTime(n, ['m', 's'], ' ');\n        }\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}