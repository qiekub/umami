{"ast":null,"code":"import _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport MetricsTable from './MetricsTable';\nimport { browserFilter } from 'lib/filters';\nexport default function BrowsersTable(_ref) {\n  var websiteId = _ref.websiteId,\n      props = _objectWithoutProperties(_ref, [\"websiteId\"]);\n\n  return /*#__PURE__*/_jsx(MetricsTable, _objectSpread(_objectSpread({}, props), {}, {\n    title: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"metrics.browsers\",\n      defaultMessage: \"Browsers\"\n    }),\n    type: \"browser\",\n    metric: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"metrics.visitors\",\n      defaultMessage: \"Visitors\"\n    }),\n    websiteId: websiteId,\n    dataFilter: browserFilter\n  }));\n}","map":null,"metadata":{},"sourceType":"module"}