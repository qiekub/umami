{"ast":null,"code":"import _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport { FormattedMessage } from 'react-intl';\n\nvar defaultText = /*#__PURE__*/_jsx(FormattedMessage, {\n  id: \"label.copy-to-clipboard\",\n  defaultMessage: \"Copy to clipboard\"\n});\n\nfunction CopyButton(_ref) {\n  var element = _ref.element,\n      props = _objectWithoutProperties(_ref, [\"element\"]);\n\n  var _useState = useState(defaultText),\n      text = _useState[0],\n      setText = _useState[1];\n\n  function handleClick() {\n    if (element !== null && element !== void 0 && element.current) {\n      element.current.select();\n      document.execCommand('copy');\n      setText( /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"message.copied\",\n        defaultMessage: \"Copied!\"\n      }));\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  return /*#__PURE__*/_jsx(Button, _objectSpread(_objectSpread({}, props), {}, {\n    onClick: handleClick,\n    children: text\n  }));\n}\n\nexport default CopyButton;","map":null,"metadata":{},"sourceType":"module"}