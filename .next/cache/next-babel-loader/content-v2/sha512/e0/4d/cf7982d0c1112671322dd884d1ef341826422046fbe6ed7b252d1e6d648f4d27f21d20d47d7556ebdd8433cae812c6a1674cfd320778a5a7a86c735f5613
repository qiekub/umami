{"ast":null,"code":"export function parseTime(val) {\n  var days = ~~(val / 86400);\n  var hours = ~~(val / 3600) - days * 24;\n  var minutes = ~~(val / 60) - days * 1440 - hours * 60;\n  var seconds = ~~val - days * 86400 - hours * 3600 - minutes * 60;\n  var ms = (val - ~~val) * 1000;\n  return {\n    days: days,\n    hours: hours,\n    minutes: minutes,\n    seconds: seconds,\n    ms: ms\n  };\n}\nexport function formatTime(val) {\n  var _parseTime = parseTime(val),\n      hour = _parseTime.hour,\n      minutes = _parseTime.minutes,\n      seconds = _parseTime.seconds;\n\n  var h = hour > 0 ? \"\".concat(hour, \":\") : '';\n  var m = hour > 0 ? minutes.toString().padStart(2, '0') : minutes;\n  var s = seconds.toString().padStart(2, '0');\n  return \"\".concat(h).concat(m, \":\").concat(s);\n}\nexport function formatShortTime(val) {\n  var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['m', 's'];\n  var space = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  var _parseTime2 = parseTime(val),\n      days = _parseTime2.days,\n      hours = _parseTime2.hours,\n      minutes = _parseTime2.minutes,\n      seconds = _parseTime2.seconds,\n      ms = _parseTime2.ms;\n\n  var t = '';\n  if (days > 0 && formats.indexOf('d') !== -1) t += \"\".concat(days, \"d\").concat(space);\n  if (hours > 0 && formats.indexOf('h') !== -1) t += \"\".concat(hours, \"h\").concat(space);\n  if (minutes > 0 && formats.indexOf('m') !== -1) t += \"\".concat(minutes, \"m\").concat(space);\n  if (seconds > 0 && formats.indexOf('s') !== -1) t += \"\".concat(seconds, \"s\").concat(space);\n  if (ms > 0 && formats.indexOf('ms') !== -1) t += \"\".concat(ms, \"ms\");\n\n  if (!t) {\n    return \"0\".concat(formats[formats.length - 1]);\n  }\n\n  return t;\n}\nexport function formatNumber(n) {\n  return Number(n).toFixed(0);\n}\nexport function formatLongNumber(value) {\n  var n = Number(value);\n\n  if (n >= 1000000) {\n    return \"\".concat((n / 1000000).toFixed(1), \"m\");\n  }\n\n  if (n >= 100000) {\n    return \"\".concat((n / 1000).toFixed(0), \"k\");\n  }\n\n  if (n >= 10000) {\n    return \"\".concat((n / 1000).toFixed(1), \"k\");\n  }\n\n  if (n >= 1000) {\n    return \"\".concat((n / 1000).toFixed(2), \"k\");\n  }\n\n  return formatNumber(n);\n}\nexport function stringToColor(str) {\n  if (!str) {\n    return '#ffffff';\n  }\n\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  var color = '#';\n\n  for (var _i = 0; _i < 3; _i++) {\n    var value = hash >> _i * 8 & 0xff;\n    color += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return color;\n}","map":null,"metadata":{},"sourceType":"module"}