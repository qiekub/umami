{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport PageviewsChart from './PageviewsChart';\nimport MetricsBar from './MetricsBar';\nimport WebsiteHeader from './WebsiteHeader';\nimport DateFilter from 'components/common/DateFilter';\nimport StickyHeader from 'components/helpers/StickyHeader';\nimport Button from 'components/common/Button';\nimport useFetch from 'hooks/useFetch';\nimport useDateRange from 'hooks/useDateRange';\nimport useTimezone from 'hooks/useTimezone';\nimport usePageQuery from 'hooks/usePageQuery';\nimport { getDateArray, getDateLength } from 'lib/date';\nimport Times from 'assets/times.svg';\nimport styles from './WebsiteChart.module.css';\nimport ErrorMessage from '../common/ErrorMessage';\nimport useShareToken from '../../hooks/useShareToken';\nimport { TOKEN_HEADER } from '../../lib/constants';\nexport default function WebsiteChart(_ref) {\n  var websiteId = _ref.websiteId,\n      title = _ref.title,\n      domain = _ref.domain,\n      _ref$stickyHeader = _ref.stickyHeader,\n      stickyHeader = _ref$stickyHeader === void 0 ? false : _ref$stickyHeader,\n      _ref$showLink = _ref.showLink,\n      showLink = _ref$showLink === void 0 ? false : _ref$showLink,\n      _ref$hideChart = _ref.hideChart,\n      hideChart = _ref$hideChart === void 0 ? false : _ref$hideChart,\n      _ref$onDataLoad = _ref.onDataLoad,\n      onDataLoad = _ref$onDataLoad === void 0 ? function () {} : _ref$onDataLoad;\n  var shareToken = useShareToken();\n\n  var _useDateRange = useDateRange(websiteId),\n      _useDateRange2 = _slicedToArray(_useDateRange, 2),\n      dateRange = _useDateRange2[0],\n      setDateRange = _useDateRange2[1];\n\n  var startDate = dateRange.startDate,\n      endDate = dateRange.endDate,\n      unit = dateRange.unit,\n      value = dateRange.value,\n      modified = dateRange.modified;\n\n  var _useTimezone = useTimezone(),\n      _useTimezone2 = _slicedToArray(_useTimezone, 1),\n      timezone = _useTimezone2[0];\n\n  var _usePageQuery = usePageQuery(),\n      router = _usePageQuery.router,\n      resolve = _usePageQuery.resolve,\n      url = _usePageQuery.query.url;\n\n  var _useFetch = useFetch(\"/api/website/\".concat(websiteId, \"/pageviews\"), {\n    params: {\n      start_at: +startDate,\n      end_at: +endDate,\n      unit: unit,\n      tz: timezone,\n      url: url\n    },\n    onDataLoad: onDataLoad,\n    headers: _defineProperty({}, TOKEN_HEADER, shareToken === null || shareToken === void 0 ? void 0 : shareToken.token)\n  }, [url, modified]),\n      data = _useFetch.data,\n      loading = _useFetch.loading,\n      error = _useFetch.error;\n\n  var chartData = useMemo(function () {\n    if (data) {\n      return {\n        pageviews: getDateArray(data.pageviews, startDate, endDate, unit),\n        sessions: getDateArray(data.sessions, startDate, endDate, unit)\n      };\n    }\n\n    return {\n      pageviews: [],\n      sessions: []\n    };\n  }, [data]);\n\n  function handleCloseFilter() {\n    router.push(resolve({\n      url: undefined\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsx(WebsiteHeader, {\n      websiteId: websiteId,\n      title: title,\n      domain: domain,\n      showLink: showLink\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(styles.header, 'row'),\n      children: /*#__PURE__*/_jsxs(StickyHeader, {\n        className: classNames(styles.metrics, 'col row'),\n        stickyClassName: styles.sticky,\n        enabled: stickyHeader,\n        children: [url && /*#__PURE__*/_jsx(PageFilter, {\n          url: url,\n          onClick: handleCloseFilter\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"col-12 col-lg-9\",\n          children: /*#__PURE__*/_jsx(MetricsBar, {\n            websiteId: websiteId\n          })\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: classNames(styles.filter, 'col-12 col-lg-3'),\n          children: /*#__PURE__*/_jsx(DateFilter, {\n            value: value,\n            startDate: startDate,\n            endDate: endDate,\n            onChange: setDateRange\n          })\n        })]\n      })\n    }), /*#__PURE__*/_jsx(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        className: \"col\",\n        children: [error && /*#__PURE__*/_jsx(ErrorMessage, {}), !hideChart && /*#__PURE__*/_jsx(PageviewsChart, {\n          websiteId: websiteId,\n          data: chartData,\n          unit: unit,\n          records: getDateLength(startDate, endDate, unit),\n          loading: loading\n        })]\n      })\n    })]\n  });\n}\n\nvar PageFilter = function PageFilter(_ref2) {\n  var url = _ref2.url,\n      onClick = _ref2.onClick;\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classNames(styles.url, 'col-12'),\n    children: /*#__PURE__*/_jsx(Button, {\n      icon: /*#__PURE__*/_jsx(Times, {}),\n      onClick: onClick,\n      variant: \"action\",\n      iconRight: true,\n      children: url\n    })\n  });\n};","map":null,"metadata":{},"sourceType":"module"}