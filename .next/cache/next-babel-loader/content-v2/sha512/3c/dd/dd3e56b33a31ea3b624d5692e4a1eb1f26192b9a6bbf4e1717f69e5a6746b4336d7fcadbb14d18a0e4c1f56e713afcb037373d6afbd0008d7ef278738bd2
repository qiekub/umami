{"ast":null,"code":"import { getAccountById, updateAccount } from 'lib/queries';\nimport { useAuth } from 'lib/middleware';\nimport { badRequest, methodNotAllowed, ok, unauthorized } from 'lib/response';\nimport { checkPassword, hashPassword } from 'lib/crypto';\nexport default (async (req, res) => {\n  await useAuth(req, res);\n  const {\n    user_id: auth_user_id,\n    is_admin\n  } = req.auth;\n  const {\n    user_id,\n    current_password,\n    new_password\n  } = req.body;\n\n  if (!is_admin && user_id !== auth_user_id) {\n    return unauthorized(res);\n  }\n\n  if (req.method === 'POST') {\n    const account = await getAccountById(user_id);\n    const valid = await checkPassword(current_password, account.password);\n\n    if (!valid) {\n      return badRequest(res, 'Current password is incorrect');\n    }\n\n    const password = await hashPassword(new_password);\n    const updated = await updateAccount(user_id, {\n      password\n    });\n    return ok(res, updated);\n  }\n\n  return methodNotAllowed(res);\n});","map":null,"metadata":{},"sourceType":"module"}