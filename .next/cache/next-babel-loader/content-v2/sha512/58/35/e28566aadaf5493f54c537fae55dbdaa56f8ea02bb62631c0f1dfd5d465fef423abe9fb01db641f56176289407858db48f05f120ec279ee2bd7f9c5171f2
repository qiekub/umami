{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { endOfYear, isSameDay } from 'date-fns';\nimport Modal from './Modal';\nimport DropDown from './DropDown';\nimport DatePickerForm from 'components/forms/DatePickerForm';\nimport useLocale from 'hooks/useLocale';\nimport { getDateRange, dateFormat } from 'lib/date';\nimport Calendar from 'assets/calendar-alt.svg';\nimport Icon from './Icon';\nconst filterOptions = [{\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.today\",\n    defaultMessage: \"Today\"\n  }),\n  value: '1day'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.last-hours\",\n    defaultMessage: \"Last {x} hours\",\n    values: {\n      x: 24\n    }\n  }),\n  value: '24hour'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.this-week\",\n    defaultMessage: \"This week\"\n  }),\n  value: '1week',\n  divider: true\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.last-days\",\n    defaultMessage: \"Last {x} days\",\n    values: {\n      x: 7\n    }\n  }),\n  value: '7day'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.this-month\",\n    defaultMessage: \"This month\"\n  }),\n  value: '1month',\n  divider: true\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.last-days\",\n    defaultMessage: \"Last {x} days\",\n    values: {\n      x: 30\n    }\n  }),\n  value: '30day'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.last-days\",\n    defaultMessage: \"Last {x} days\",\n    values: {\n      x: 90\n    }\n  }),\n  value: '90day'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.this-year\",\n    defaultMessage: \"This year\"\n  }),\n  value: '1year'\n}, {\n  label: /*#__PURE__*/_jsx(FormattedMessage, {\n    id: \"label.custom-range\",\n    defaultMessage: \"Custom range\"\n  }),\n  value: 'custom',\n  divider: true\n}];\n\nfunction DateFilter({\n  value,\n  startDate,\n  endDate,\n  onChange,\n  className\n}) {\n  const [locale] = useLocale();\n  const {\n    0: showPicker,\n    1: setShowPicker\n  } = useState(false);\n  const displayValue = value === 'custom' ? /*#__PURE__*/_jsx(CustomRange, {\n    startDate: startDate,\n    endDate: endDate,\n    onClick: () => handleChange('custom')\n  }) : value;\n\n  function handleChange(value) {\n    if (value === 'custom') {\n      setShowPicker(true);\n      return;\n    }\n\n    onChange(getDateRange(value, locale));\n  }\n\n  function handlePickerChange(value) {\n    setShowPicker(false);\n    onChange(value);\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(DropDown, {\n      className: className,\n      value: displayValue,\n      options: filterOptions,\n      onChange: handleChange\n    }), showPicker && /*#__PURE__*/_jsx(Modal, {\n      children: /*#__PURE__*/_jsx(DatePickerForm, {\n        startDate: startDate,\n        endDate: endDate,\n        minDate: new Date(2000, 0, 1),\n        maxDate: endOfYear(new Date()),\n        onChange: handlePickerChange,\n        onClose: () => setShowPicker(false)\n      })\n    })]\n  });\n}\n\nconst CustomRange = ({\n  startDate,\n  endDate,\n  onClick\n}) => {\n  const [locale] = useLocale();\n\n  function handleClick(e) {\n    e.stopPropagation();\n    onClick();\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Icon, {\n      icon: /*#__PURE__*/_jsx(Calendar, {}),\n      className: \"mr-2\",\n      onClick: handleClick\n    }), dateFormat(startDate, 'd LLL y', locale), !isSameDay(startDate, endDate) && ` â€” ${dateFormat(endDate, 'd LLL y', locale)}`]\n  });\n};\n\nexport default DateFilter;","map":null,"metadata":{},"sourceType":"module"}