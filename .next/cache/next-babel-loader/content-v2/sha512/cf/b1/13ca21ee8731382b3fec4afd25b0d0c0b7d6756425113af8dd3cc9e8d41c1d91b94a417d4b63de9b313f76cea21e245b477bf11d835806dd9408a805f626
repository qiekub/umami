{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormattedMessage } from 'react-intl';\nimport { setDateRange } from 'redux/actions/websites';\nimport Button from './Button';\nimport Refresh from 'assets/redo.svg';\nimport Dots from 'assets/ellipsis-h.svg';\nimport useDateRange from 'hooks/useDateRange';\nimport { getDateRange } from '../../lib/date';\nimport useLocale from 'hooks/useLocale';\n\nfunction RefreshButton({\n  websiteId\n}) {\n  const dispatch = useDispatch();\n  const [locale] = useLocale();\n  const [dateRange] = useDateRange(websiteId);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const completed = useSelector(state => state.queries[`/api/website/${websiteId}/stats`]);\n\n  function handleClick() {\n    if (dateRange) {\n      setLoading(true);\n      dispatch(setDateRange(websiteId, getDateRange(dateRange.value, locale)));\n    }\n  }\n\n  useEffect(() => {\n    setLoading(false);\n  }, [completed]);\n  return /*#__PURE__*/_jsx(Button, {\n    icon: loading ? /*#__PURE__*/_jsx(Dots, {}) : /*#__PURE__*/_jsx(Refresh, {}),\n    tooltip: /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"label.refresh\",\n      defaultMessage: \"Refresh\"\n    }),\n    tooltipId: \"button-refresh\",\n    size: \"small\",\n    onClick: handleClick\n  });\n}\n\nexport default RefreshButton;","map":null,"metadata":{},"sourceType":"module"}