{"ast":null,"code":"import _regeneratorRuntime from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateUser } from 'redux/actions/user';\nimport { useRouter } from 'next/router';\nimport { get } from 'lib/web';\nexport default function useRequireLogin() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var storeUser = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState = useState(!storeUser),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(storeUser),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  function loadUser() {\n    return _loadUser.apply(this, arguments);\n  }\n\n  function _loadUser() {\n    _loadUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _yield$get, ok, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              _context.next = 3;\n              return get(\"\".concat(router.basePath, \"/api/auth/verify\"));\n\n            case 3:\n              _yield$get = _context.sent;\n              ok = _yield$get.ok;\n              data = _yield$get.data;\n\n              if (ok) {\n                _context.next = 8;\n                break;\n              }\n\n              return _context.abrupt(\"return\", router.push('/login'));\n\n            case 8:\n              _context.next = 10;\n              return dispatch(updateUser(data));\n\n            case 10:\n              setUser(user);\n              setLoading(false);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadUser.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!loading && user) {\n      return;\n    }\n\n    loadUser();\n  }, []);\n  return {\n    user: user,\n    loading: loading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}