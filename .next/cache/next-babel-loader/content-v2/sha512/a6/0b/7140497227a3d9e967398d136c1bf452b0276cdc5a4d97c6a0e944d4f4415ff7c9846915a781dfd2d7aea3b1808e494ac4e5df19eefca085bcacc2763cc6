{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport NoData from 'components/common/NoData';\nimport styles from './Table.module.css';\n\nfunction Table({\n  columns,\n  rows,\n  empty,\n  className,\n  bodyClassName,\n  rowKey,\n  showHeader = true,\n  children\n}) {\n  if (empty && rows.length === 0) {\n    return empty;\n  }\n\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: classNames(styles.table, className),\n    children: [showHeader && /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(styles.header, 'row'),\n      children: columns.map(({\n        key,\n        label,\n        className,\n        style,\n        header\n      }) => /*#__PURE__*/_jsx(\"div\", {\n        className: classNames(styles.head, className, header === null || header === void 0 ? void 0 : header.className),\n        style: _objectSpread(_objectSpread({}, style), header === null || header === void 0 ? void 0 : header.style),\n        children: label\n      }, key))\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: classNames(styles.body, bodyClassName),\n      children: [rows.length === 0 && /*#__PURE__*/_jsx(NoData, {}), !children && rows.map((row, index) => {\n        const id = rowKey ? rowKey(row) : index;\n        return /*#__PURE__*/_jsx(TableRow, {\n          columns: columns,\n          row: row\n        }, id);\n      }), children]\n    })]\n  });\n}\n\nexport default Table;\nexport const TableRow = ({\n  columns,\n  row\n}) => /*#__PURE__*/_jsx(\"div\", {\n  className: classNames(styles.row, 'row'),\n  children: columns.map(({\n    key,\n    render,\n    className,\n    style,\n    cell\n  }, index) => /*#__PURE__*/_jsx(\"div\", {\n    className: classNames(styles.cell, className, cell === null || cell === void 0 ? void 0 : cell.className),\n    style: _objectSpread(_objectSpread({}, style), cell === null || cell === void 0 ? void 0 : cell.style),\n    children: render ? render(row) : row[key]\n  }, `${key}-${index}`))\n});","map":null,"metadata":{},"sourceType":"module"}