{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport classNames from 'classnames';\nimport Icon from './Icon';\nimport styles from './Button.module.css';\n\nfunction Button(_ref) {\n  var _classNames;\n\n  var _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'button' : _ref$type,\n      icon = _ref.icon,\n      size = _ref.size,\n      variant = _ref.variant,\n      children = _ref.children,\n      className = _ref.className,\n      tooltip = _ref.tooltip,\n      tooltipId = _ref.tooltipId,\n      disabled = _ref.disabled,\n      iconRight = _ref.iconRight,\n      _ref$onClick = _ref.onClick,\n      onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      props = _objectWithoutProperties(_ref, [\"type\", \"icon\", \"size\", \"variant\", \"children\", \"className\", \"tooltip\", \"tooltipId\", \"disabled\", \"iconRight\", \"onClick\"]);\n\n  return /*#__PURE__*/_jsxs(\"button\", _objectSpread(_objectSpread({\n    \"data-tip\": tooltip,\n    \"data-effect\": \"solid\",\n    \"data-for\": tooltipId,\n    type: type,\n    className: classNames(styles.button, className, (_classNames = {}, _defineProperty(_classNames, styles.large, size === 'large'), _defineProperty(_classNames, styles.small, size === 'small'), _defineProperty(_classNames, styles.xsmall, size === 'xsmall'), _defineProperty(_classNames, styles.action, variant === 'action'), _defineProperty(_classNames, styles.danger, variant === 'danger'), _defineProperty(_classNames, styles.light, variant === 'light'), _defineProperty(_classNames, styles.iconRight, iconRight), _classNames)),\n    disabled: disabled,\n    onClick: !disabled ? onClick : null\n  }, props), {}, {\n    children: [icon && /*#__PURE__*/_jsx(Icon, {\n      className: styles.icon,\n      icon: icon,\n      size: size\n    }), children && /*#__PURE__*/_jsx(\"div\", {\n      className: styles.label,\n      children: children\n    }), tooltip && /*#__PURE__*/_jsx(ReactTooltip, {\n      id: tooltipId,\n      children: tooltip\n    })]\n  }));\n}\n\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}