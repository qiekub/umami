{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport Dot from 'components/common/Dot';\nimport useLocale from 'hooks/useLocale';\nimport styles from './Legend.module.css';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nexport default function Legend({\n  chart\n}) {\n  var _chart$legend;\n\n  const [locale] = useLocale();\n  const forceUpdate = useForceUpdate();\n\n  function handleClick(index) {\n    const meta = chart.getDatasetMeta(index);\n    meta.hidden = meta.hidden === null ? !chart.data.datasets[index].hidden : null;\n    chart.update();\n    forceUpdate();\n  }\n\n  if (!(chart !== null && chart !== void 0 && (_chart$legend = chart.legend) !== null && _chart$legend !== void 0 && _chart$legend.legendItems.find(({\n    text\n  }) => text))) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: styles.legend,\n    children: chart.legend.legendItems.map(({\n      text,\n      fillStyle,\n      datasetIndex,\n      hidden\n    }) => /*#__PURE__*/_jsxs(\"div\", {\n      className: classNames(styles.label, {\n        [styles.hidden]: hidden\n      }),\n      onClick: () => handleClick(datasetIndex),\n      children: [/*#__PURE__*/_jsx(Dot, {\n        color: fillStyle\n      }), /*#__PURE__*/_jsx(\"span\", {\n        className: locale,\n        children: text\n      })]\n    }, text))\n  });\n}","map":null,"metadata":{},"sourceType":"module"}