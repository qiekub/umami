{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport classNames from 'classnames';\nexport default function StickyHeader(_ref) {\n  var _ref$current;\n\n  var className = _ref.className,\n      stickyClassName = _ref.stickyClassName,\n      stickyStyle = _ref.stickyStyle,\n      children = _ref.children,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled;\n\n  var _useState = useState(false),\n      sticky = _useState[0],\n      setSticky = _useState[1];\n\n  var ref = useRef();\n  var top = useRef(0);\n  useEffect(function () {\n    var checkPosition = function checkPosition() {\n      if (ref.current) {\n        if (!top.current) {\n          top.current = ref.current.offsetTop + ref.current.offsetHeight;\n        }\n\n        var state = window.pageYOffset > top.current;\n\n        if (sticky !== state) {\n          setSticky(state);\n        }\n      }\n    };\n\n    checkPosition();\n\n    if (enabled) {\n      window.addEventListener('scroll', checkPosition);\n    }\n\n    return function () {\n      window.removeEventListener('scroll', checkPosition);\n    };\n  }, [sticky, enabled]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    \"data-sticky\": sticky,\n    className: classNames(className, _defineProperty({}, stickyClassName, sticky)),\n    style: sticky ? _objectSpread(_objectSpread({}, stickyStyle), {}, {\n      width: ref === null || ref === void 0 ? void 0 : (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.clientWidth\n    }) : null,\n    children: children\n  });\n}","map":null,"metadata":{},"sourceType":"module"}