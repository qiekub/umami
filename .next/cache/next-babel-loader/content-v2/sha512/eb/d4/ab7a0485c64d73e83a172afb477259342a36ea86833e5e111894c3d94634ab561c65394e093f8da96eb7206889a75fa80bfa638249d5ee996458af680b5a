{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport Button from 'components/common/Button';\nimport FormLayout, { FormButtons, FormError, FormMessage, FormRow } from 'components/layout/FormLayout';\nimport Checkbox from 'components/common/Checkbox';\nimport { DOMAIN_REGEX } from 'lib/constants';\nimport usePost from 'hooks/usePost';\nconst initialValues = {\n  name: '',\n  domain: '',\n  public: false\n};\n\nconst validate = ({\n  name,\n  domain\n}) => {\n  const errors = {};\n\n  if (!name) {\n    errors.name = /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"label.required\",\n      defaultMessage: \"Required\"\n    });\n  }\n\n  if (!domain) {\n    errors.domain = /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"label.required\",\n      defaultMessage: \"Required\"\n    });\n  } else if (!DOMAIN_REGEX.test(domain)) {\n    errors.domain = /*#__PURE__*/_jsx(FormattedMessage, {\n      id: \"label.invalid-domain\",\n      defaultMessage: \"Invalid domain\"\n    });\n  }\n\n  return errors;\n};\n\nexport default function WebsiteEditForm({\n  values,\n  onSave,\n  onClose\n}) {\n  const post = usePost();\n  const {\n    0: message,\n    1: setMessage\n  } = useState();\n\n  const handleSubmit = async values => {\n    const {\n      ok,\n      data\n    } = await post('/api/website', values);\n\n    if (ok) {\n      onSave();\n    } else {\n      setMessage(data || /*#__PURE__*/_jsx(FormattedMessage, {\n        id: \"message.failure\",\n        defaultMessage: \"Something went wrong.\"\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsx(FormLayout, {\n    children: /*#__PURE__*/_jsx(Formik, {\n      initialValues: _objectSpread(_objectSpread(_objectSpread({}, initialValues), values), {}, {\n        enable_share_url: !!(values !== null && values !== void 0 && values.share_id)\n      }),\n      validate: validate,\n      onSubmit: handleSubmit,\n      children: () => /*#__PURE__*/_jsxs(Form, {\n        children: [/*#__PURE__*/_jsxs(FormRow, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"name\",\n            children: /*#__PURE__*/_jsx(FormattedMessage, {\n              id: \"label.name\",\n              defaultMessage: \"Name\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"name\",\n              type: \"text\"\n            }), /*#__PURE__*/_jsx(FormError, {\n              name: \"name\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(FormRow, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"domain\",\n            children: /*#__PURE__*/_jsx(FormattedMessage, {\n              id: \"label.domain\",\n              defaultMessage: \"Domain\"\n            })\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(Field, {\n              name: \"domain\",\n              type: \"text\",\n              placeholder: \"example.com\"\n            }), /*#__PURE__*/_jsx(FormError, {\n              name: \"domain\"\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(FormRow, {\n          children: [/*#__PURE__*/_jsx(\"label\", {}), /*#__PURE__*/_jsx(Field, {\n            name: \"enable_share_url\",\n            children: ({\n              field\n            }) => /*#__PURE__*/_jsx(Checkbox, _objectSpread(_objectSpread({}, field), {}, {\n              label: /*#__PURE__*/_jsx(FormattedMessage, {\n                id: \"label.enable-share-url\",\n                defaultMessage: \"Enable share URL\"\n              })\n            }))\n          })]\n        }), /*#__PURE__*/_jsxs(FormButtons, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            type: \"submit\",\n            variant: \"action\",\n            children: /*#__PURE__*/_jsx(FormattedMessage, {\n              id: \"label.save\",\n              defaultMessage: \"Save\"\n            })\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: onClose,\n            children: /*#__PURE__*/_jsx(FormattedMessage, {\n              id: \"label.cancel\",\n              defaultMessage: \"Cancel\"\n            })\n          })]\n        }), /*#__PURE__*/_jsx(FormMessage, {\n          children: message\n        })]\n      })\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module"}