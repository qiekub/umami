{"ast":null,"code":"import _regeneratorRuntime from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/t/Documents_2/Work/Qiekub/code/umami/umami/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { get } from 'lib/web';\nimport enUS from 'public/country/en-US.json';\nvar countryNames = {\n  'en-US': enUS\n};\nexport default function useCountryNames(locale) {\n  var _useState = useState(countryNames[locale] || enUS),\n      list = _useState[0],\n      setList = _useState[1];\n\n  var _useRouter = useRouter(),\n      basePath = _useRouter.basePath;\n\n  function loadData(_x) {\n    return _loadData.apply(this, arguments);\n  }\n\n  function _loadData() {\n    _loadData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(locale) {\n      var _yield$get, ok, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return get(\"\".concat(basePath, \"/country/\").concat(locale, \".json\"));\n\n            case 2:\n              _yield$get = _context.sent;\n              ok = _yield$get.ok;\n              data = _yield$get.data;\n\n              if (ok) {\n                countryNames[locale] = data;\n                setList(countryNames[locale]);\n              } else {\n                setList(enUS);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _loadData.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    if (!countryNames[locale]) {\n      loadData(locale);\n    } else {\n      setList(countryNames[locale]);\n    }\n  }, [locale]);\n  return list;\n}","map":null,"metadata":{},"sourceType":"module"}